@import "../includes/variables";
@import "../includes/mixins";

@mixin thumbChild() {
    .thumb {
        cursor: zoom-in;
        width: 34px;
        height: 34px;
        top: 0;
        margin-bottom: -7px;
        margin-top: -7px;
        background-size: cover;
        background-position: center center;
        border-radius: $defaultBorderRadius;
    }
}

body {

    > *:not(.dataTableWindow) {
        transition: filter, opacity 0.3s;
    }

    > #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(200,200,200,.6);
        opacity: 0;
        z-index: $zIndexWindowLevel0;
        transition: opacity 0.3s;
    }

    .datatableThumbHoverContainer {
        position: absolute;
        background-color: $colorWhite;
        z-index: $zIndexAboveLevel10Window;

        img {
            max-width: 96px;
            max-height: 96px;
            border-radius: $defaultBorderRadius;
            border: 1px solid $lightGray;
        }

        &.svg{
            width: 96px;
        }
    }

    &.noSelect {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
}

:root > body.datatableBlur {
    overflow: hidden;

    > #menu, > #main {
        @include blur(6);
        @include noTextSelect();
        pointer-events: none;
    }

    > #menu {
        // fix weird tinymce issue, where menu cannot have position: fixed
        position: absolute;
    }

    #overlay {
        display: block;
        opacity: 1;
    }
}

.dataTableWindow {
    width: 1050px;
    position: fixed;
    top: 20px;
    bottom: 20px;
    background-color: rgba($colorWhite, 0.97);
    z-index: $zIndexWindowLevel0;
    left: 50%;
    margin-left: -525px;
    border: 1px solid $lightGray;
    border-radius: $defaultBorderRadius;
    display: none;
    min-height: 300px;

    @media #{$lowerThanDesktop}{
        width: auto;
        left: 40px;
        right: 40px;
        margin-left: 0;
    }

    @media (max-width: $screen-xs-min) {
        top: 10px;
        bottom: 10px;
        left: 10px;
        right: 10px;
    }

    &.blur {
        @include blur(3);

        .windowContent {
            opacity: .5;
        }
    }

    @for $i from 1 through 10 {
        &.level#{$i} {
            z-index: $zIndexWindowLevel0 + $i;
            top: 20px + ($i * 10);
            bottom: 20px + ($i * 10);
            width: 900px + ($i * 20);
            margin-left: -450px - ($i * 10);

            @media #{$lowerThanDesktop}{
                width: auto;
                top: 20px;
                bottom: 20px;
                left: 50px;
                right: 50px;
                margin-left: 0;
            }

            @media (max-width: $screen-xs-min) {
                top: 10px;
                bottom: 10px;
                left: 10px;
                right: 10px;
            }
        }
    }

    > .closeButton {
        @include close(30);
        right: 50px;
        top: 23px;
        position: absolute;
        cursor: pointer;

        @media (max-width: $screen-xs-min) {
            right: 20px;
            top: 13px;
        }
    }

    > .windowContent {

        > .header {
            @include clearFix();
            font-size: $fontSizeLarge;
            line-height: 36px;
            padding: 20px 100px 20px 50px;
            border-bottom: 1px solid $lightGray;
            width: 100%;

            .lbl {
                float: left;
                width: 100%;
                white-space: nowrap;
                text-overflow: ellipsis;
                overflow: hidden;
            }

            &.has-filters .lbl {
                width: calc(100% - 150px);
            }

            .filters {
                text-align: right;
                float: right;

                select {
                    width: 150px;
                    text-indent: 5px;
                }
            }

            @media (max-width: $screen-xs-min) {
                padding: 10px 60px 10px 20px;
            }
        }

        > .tabs {
            @include clearFix();
            border-bottom: 1px solid $lightGray;
            white-space: nowrap;
            overflow: auto;

            .tab {
                display: inline-block;
                cursor: pointer;
                padding: 15px 50px;

                &.error {
                    color: $colorErrorText;
                }

                &.active {
                    background-color: $lightGrayLight;
                }
            }
        }

        > .content {
            overflow: auto;
            padding: 30px 50px;

            .tab-contents {

                .tab-content {
                    display: none;

                    &.active {
                        display: block;
                    }
                }
            }

            @media (max-width: $screen-xs-min) {
                padding: 10px 20px;
            }
        }

        > .footer {
            position: absolute;
            padding: 10px;
            border-top: 1px solid $lightGray;
            bottom: 0;
            width: 100%;
            text-align: right;

            .restore{
                display: none;

                ul a{
                    cursor: pointer;
                }
            }

            button {
                margin-left: 5px;
                padding: 10px 35px;

                @media (max-width: $screen-xs-min) {
                    padding: 10px 20px;
                }
            }
        }
    }
}

.datatable {

    .pages {
        @include noTextSelect();
        float: right;
        max-height: 36px;
        overflow: hidden;

        .pagination {
            margin: 0;
            padding: 0;;

            > li > a {
                padding: 7px 12px;
                color: $colorPink;
                cursor: pointer;
                min-width: 36px;
                text-align: center;
            }

            > .active > a {
                color: $colorWhite;
                background-color: $colorPink;
                border-color: $colorPink;
            }
        }
    }

    .table {
        @include blurTransition();

        table {
            width: 100%;

            tr {
                height: 36px;
            }

            tr td {
                padding: $dataTableCellVerticalPadding 15px;
            }

            thead {
                font-weight: 400;

                td {
                    position: relative;
                    cursor: pointer;

                    .glyphicon {
                        position: absolute;
                        top: auto;
                        margin-left: 8px;
                        margin-top: 3px;
                        color: $gray;
                    }
                }
            }

            tbody {

                tr {
                    cursor: default;

                    td {
                        @include noTextSelect();
                        @include thumbChild();

                        .highlight {
                            background-color: $highLightColor;
                        }
                    }

                    &:nth-child(odd) {
                        background-color: $superLightGray;
                    }

                    &:hover:not(.dragHover) {
                        td, .actions {
                            background-color: $lightGray;
                        }
                    }

                    &.edited {
                        td {
                            background-color: $highLightColor;
                        }

                        &:hover td, &:hover td .actions {
                            background-color: $highLightColorDark;
                        }
                    }

                    &.selected {
                        td, td:last-child .actions {
                            background-color: $colorPink;
                            color: $colorWhite;

                            .action {
                                svg {
                                    fill: $colorWhite;
                                }

                                a {
                                    color: $colorWhite;
                                }
                            }

                            .highlight {
                                background-color: $pinkDark;
                            }
                        }

                        &:hover {
                            td, td:last-child .actions {
                                background-color: $pinkDark;

                                .highlight {
                                    background-color: $pinkDarker;
                                }
                            }
                        }
                    }

                    td {
                        &:last-child {
                            position: relative;
                            padding-right: 15px;

                            .actions{
                                position: absolute;
                                display: flex;
                                visibility: hidden;
                                pointer-events: none;
                                right: 0;
                                padding-right: 10px;
                                top: 0;
                                height: 100%;
                                align-items: center;

                                .action{
                                    height: 100%;
                                    width: 30px;
                                    display: flex;
                                    cursor: pointer;
                                    align-items: center;
                                    justify-content: center;

                                    a {
                                        color: $colorBlack;
                                        text-decoration: none;
                                    }
                                }
                            }
                        }

                        &.sort {
                            cursor: move;
                        }
                    }

                    &:hover {
                        td:last-child .actions {
                            visibility: visible;
                            pointer-events: visible;
                        }
                    }
                }
            }
        }

        .no-data {
            padding: 8px 0;
        }
    }

    > .footer {
        @include clearFix();
    }

    .modal{
        .modal-title{
            float: left;
        }

        .modal-dialog{
            width: 900px;

            @media (max-width: $screen-sm-max) {
                width: calc(100% - 20px);
            }
        }

        .modal-body {

            h1, h2, h3, h4, h5, h6 {
                font-weight: 400;
                margin-bottom: 10px;
                margin-top: 40px;
            }

            img{
                margin-bottom: 20px;
            }
        }
    }
}

.draggedObject {
    display: block;
    z-index: $zIndexAboveLevel10Window;
    position: absolute;
    pointer-events: none;
    opacity: .95;

    &.rowClone {
        background-color: rgba(255,255,255,.8);
        -webkit-box-shadow: 0 0 1px 0 rgba($colorBlack, 0.25);
        -moz-box-shadow: 0 0 1px 0 rgba($colorBlack, 0.25);
        box-shadow: 0 0 1px 0 rgba($colorBlack, 0.25);

        td {
            @include thumbChild();
            padding: $dataTableCellPadding;
        }

        .actions {
            display: none;
        }
    }
}

body.isDragging {

    * {
        cursor: default !important;
    }

    .datatable {
        tbody, tbody * {
            cursor: move !important;
        }

        .table tbody td{
            transition: padding .2s;
        }
    }
}

.datatable .table table tr {
    &.dragged {
        opacity: .3;
    }

    &.dragHover {
        cursor: move;

        &[data-drop="before"], &[data-drop="after"] + tr {
            td {
                padding-top: 44px;
            }
        }

        &[data-drop="after"]:last-child {
            td {
                padding-bottom: 44px;
            }
        }
    }
}